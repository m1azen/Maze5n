const SHEET_ID = '1tpF88JKEVxgx_5clrUWBNry4htp1QtSJAvMll2np1Mo';
const API_KEY = 'AIzaSyBm2J_GO7yr3nk6G8t6YtB3UAlod8V2oR0';

document.addEventListener("DOMContentLoaded", async () => {
  const email = localStorage.getItem("userEmail");
  const isLoggedIn = localStorage.getItem("isLoggedIn");

  // Ø§Ù„ØªØ­Ù‚Ù‚ Ù…Ù† ØªØ³Ø¬ÙŠÙ„ Ø§Ù„Ø¯Ø®ÙˆÙ„
  if (!email || isLoggedIn !== "true") {
    window.location.href = "login.html";
    return;
  }

  // Ø¬Ù„Ø¨ Ø§Ù„Ø¨ÙŠØ§Ù†Ø§Øª Ù…Ù† Google Sheets
  const users = await fetchData('Sheet1!A:J');
  const currentUser = users.find(user => user[2] === email); // Ø¹Ù…ÙˆØ¯ 2 = Ø§Ù„Ø¥ÙŠÙ…ÙŠÙ„

  // Ø§Ù„ØªØ­Ù‚Ù‚ Ù…Ù† ÙˆØ¬ÙˆØ¯ Ø§Ù„Ù…Ø³ØªØ®Ø¯Ù…
  if (!currentUser) {
    alert("User not found.");
    return;
  }

  // Ø¹Ø±Ø¶ Ø§Ù„Ø¨ÙŠØ§Ù†Ø§Øª
  document.getElementById('username').textContent = currentUser[1]; // Ø§Ù„Ø§Ø³Ù…
  document.getElementById('email').textContent = currentUser[2]; // Ø§Ù„Ø¥ÙŠÙ…ÙŠÙ„
  document.getElementById('status').textContent = currentUser[4]; // Ø§Ù„Ø­Ø§Ù„Ø©
  document.getElementById('reason').textContent = currentUser[5] || "None";
  document.getElementById('messageContent').textContent = currentUser[9] || "No new messages.";

  // Ø¹Ø±Ø¶ Ø§Ù„Ø¯Ø±Ø¬Ø§Øª
  const exams = users.filter(user => user[2] === email && user[6]); // ØªØ¹Ø¯ÙŠÙ„ Ù‡Ù†Ø§ Ù„Ù„ØªØ­Ù‚Ù‚ Ù…Ù† ÙˆØ¬ÙˆØ¯ Ø§Ù„Ø§Ù…ØªØ­Ø§Ù†Ø§Øª
  updatePerformanceCircle(exams);
  populateExamResults(exams);

  // Ø²Ø± ØªØ³Ø¬ÙŠÙ„ Ø§Ù„Ø®Ø±ÙˆØ¬
  document.getElementById('logoutButton').addEventListener('click', () => {
    localStorage.clear();
    alert('Logged out successfully!');
    window.location.href = 'login.html';
  });
});

// Fetch from Google Sheets
async function fetchData(range) {
  const response = await fetch(
    `https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/${range}?key=${API_KEY}`
  );
  
  // Ø§Ù„ØªØ­Ù‚Ù‚ Ù…Ù† Ø§Ø³ØªØ¬Ø§Ø¨Ø© Ø§Ù„Ø®Ø§Ø¯Ù…
  if (!response.ok) {
    throw new Error('Failed to fetch data from Google Sheets.');
  }

  const data = await response.json();
  return data.values || [];
}

// Ø¹Ø±Ø¶ Ø§Ù„Ù…ØªÙˆØ³Ø·
function updatePerformanceCircle(exams) {
  const averageGrade = exams.reduce((sum, exam) => sum + parseFloat(exam[8] || 0), 0) / exams.length || 0;
  document.documentElement.style.setProperty('--percentage', `${averageGrade}%`);
  document.getElementById('averageGrade').textContent = `${averageGrade.toFixed(2)}%`;
  const message = averageGrade < 50 ? "Keep pushing forward! ðŸ’ª" : "Great performance! Keep it up! ðŸŽ‰";
  document.getElementById('performanceMessage').textContent = message;
}

// Ø¬Ø¯ÙˆÙ„ Ø§Ù„Ù†ØªØ§Ø¦Ø¬
function populateExamResults(exams) {
  const examTable = document.getElementById('examTable');
  examTable.innerHTML = exams.map(exam => `
    <tr>
      <td>${exam[6]}</td>
      <td>${exam[7]}</td>
      <td>${exam[8]}%</td>
    </tr>
  `).join('');
}
